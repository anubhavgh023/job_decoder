version: '3.3'

services:
  # Fastapi backend
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/db:/app/backend/db
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`jobdecoder.anubhavsamanta.tech`) && PathPrefix(`/api`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  # Next.js frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`jobdecoder.anubhavsamanta.tech`) && PathPrefix(`/`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    
  # reverse proxy (traefik)
  traefik :
    # The official v3 Traefik docker image
    image: traefik:v3.1
    container_name: "traefik"
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - "--api.insecure=true" 
      - "--providers.docker"      
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`jobdecoder.anubhavsamanta.tech`)"
      - "traefik.http.routers.whoami.entrypoints=web"

networks:
  app-network:
    driver: bridge