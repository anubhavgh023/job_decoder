version: '3'

services:
  # Fastapi backend
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/db:/app/backend/db
    # router traffic
    labels:
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`)"   # Route traffic to /api to backend
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    networks:
      - app-network

  # Next.js frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    labels:
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`)"   # Route all traffic to frontend
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    networks:
      - app-network

  # traefik reverse proxy
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.websecure.address=:443"
      # generate certificate
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=asamanta2123@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443" # The HTTP port
      - "8080:8080" # The Web UI dashboard
    volumes:
      - "./letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`jobdecoder.anubhavsamanta.tech`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
    
networks:
  app-network:
    driver: bridge